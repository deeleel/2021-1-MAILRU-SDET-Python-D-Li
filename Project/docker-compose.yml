version: '2.1'

services:

  selenoid:
    image: aerokube/selenoid:latest-release
    container_name: selenoid
    volumes:
      - ./testing/Main/code/config:/etc/selenoid:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - ./testing/Main/code/config/video:/etc/selenoid/video
      - ./testing/Main/code/config/logs:/etc/selenoid/logs
    environment:
      - OVERRIDE_VIDEO_OUTPUT_DIR=/path/to/config/video
    command: ["-conf", "/etc/selenoid/browsers.json", "-video-output-dir", "/etc/selenoid/video", "-log-output-dir", "/etc/selenoid/logs", "-container-network", "selenoid"]
    ports:
      - 4444:4444

  percona:
    image: "percona:latest"
    container_name: percona
    ports: 
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: test_qa
      MYSQL_PASSWORD: qa_test
      MYSQL_DATABASE: technoatom
    healthcheck:
      test: ['CMD', 'mysqladmin', '-utest_qa', '-pqa_test', 'ping', '-h', '127.0.0.1']
      timeout: 1s
      retries: 30
    
  filldb:
    build: ./connect_db
    container_name: filldb
    tty: true
    volumes:
      - ./connect_db:/tmp/connect_db
    entrypoint: /bin/bash /tmp/connect_db/start_tests.sh
    environment: 
      TESTS_PATH: /tmp/connect_db/code
    depends_on:
      percona:
        condition: service_healthy

  mocking:
    build: ./Mock
    container_name: mocking
    tty: True
    ports: 
      - 8083:8083
    volumes:
      - ./Mock:/tmp/Mock
    entrypoint: /bin/bash /tmp/Mock/start_tests.sh
    working_dir: /tmp/Mock
    environment: 
      TESTS_PATH: /tmp/Mock/code/flask_mock.py
      THREADS: 0
    depends_on: 
      - filldb

  notmyapp:
    image: "myapp:latest"
    container_name: notmyapp
    volumes:
      - ./config.py:/tmp/config.py
    entrypoint: /app/myapp --config=/tmp/config.py
    ports: 
      - 8085:8080
    depends_on:
      percona:
        condition: service_healthy
    depends_on: 
      - mocking
    links: 
      - selenoid

  testsapi:
    build: ./testing/
    tty: True
    container_name: testsapi
    volumes:
      - ./testing:/tmp/testing
      - ../allure-results:/tmp/reports
    entrypoint: /bin/bash /tmp/testing/Main/start_tests.sh
    working_dir: /tmp/testing/Main
    environment: 
      TESTS_PATH: /tmp/testing/Main/code/test_api/test.py
      THREADS: 0
    depends_on:
      - notmyapp

  testsui:
    build: ./testing
    container_name: testsui
    tty: True
    volumes:
      - ./testing:/tmp/testing
      - ../allure-results:/tmp/reports
    entrypoint: /bin/bash /tmp/testing/Main/start_tests.sh
    working_dir: /tmp/testing/Main/
    environment: 
      TESTS_PATH: /tmp/testing/Main/code/test_ui/test.py
      THREADS: 0
    depends_on:
      - testsapi

networks:
  default:
    external: true
    name: selenoid



